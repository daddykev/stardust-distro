rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own user profile
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow anyone to read invite codes (needed for validation during signup)
    // Only admins can create or delete invite codes
    match /inviteCodes/{codeId} {
      allow read: if true; // Public read for validation
      allow create, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if false; // No updates needed for simple codes
    }
    
    // Allow authenticated users to read all releases (for now)
    // In production, this would be scoped to organization/tenant
    match /releases/{releaseId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to manage delivery targets
    match /deliveryTargets/{targetId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to manage genre mappings
    match /genreMappings/{mappingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to view deliveries
    match /deliveries/{deliveryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Idempotency locks
    match /locks/{lockId} {
      // Only authenticated cloud functions can manage locks
      allow read, write: if request.auth != null && 
        request.auth.token.admin == true;
    }

    // Test Results - Store testing logs and health scores
    match /testResults/{resultId} {
      // Anyone authenticated can read test results (for monitoring)
      allow read: if request.auth != null;
      // Only admins or the test runner can write test results
      allow write: if request.auth != null && 
        (request.auth.uid == request.resource.data.runBy ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Latest Test Status - Single document for quick health check
    match /systemHealth/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Delivery History - tracks what messages have been sent to which targets
    match /deliveryHistory/{document=**} {
      // Allow authenticated users to read - queries will be filtered client-side
      allow read: if request.auth != null;
      
      // Only allow creating documents with the user's tenantId
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.tenantId;
        
      // Only allow updating your own documents
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.tenantId;
        
      allow delete: if false; // Prevent deletion of history
    }
  }
}